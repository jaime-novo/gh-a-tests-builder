name: Notify production release
on:
  push:
    branches:
      - main

jobs:
  notify:
    runs-on: ubuntu-latest
    env:
      CI_COMMIT_BEFORE_SHA: ${{ github.event.before }}
      CI_COMMIT_SHA: ${{ github.event.after }}
      PREVIOUS_COMMIT_PATH: "previous"
      YQ_PATH: /tmp
 
    # Use the previous commit to retrieve from it the previous ms_config.yaml files
    steps:
      - id: checkout-previous-commit
        uses: actions/checkout@v3
        with:
          ref: ${{ env.CI_COMMIT_BEFORE_SHA }}
          path: ${{ env.PREVIOUS_COMMIT_PATH }}

      # And the current commit to get the new ms_config.yaml files
      - id: checkout-current-commit
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Leverage the 'terraform-helper' module to access to git helpers
      - id: install-helper
        shell: bash
        env:
          GITHUB_OAUTH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          curl -Ls https://raw.githubusercontent.com/gruntwork-io/gruntwork-installer/v0.0.38/bootstrap-gruntwork-installer.sh \
          | bash /dev/stdin --version v0.0.38
          gruntwork-install --repo "https://github.com/gruntwork-io/terraform-aws-ci" \
          --module-name "terraform-helpers" \
          --tag "v0.51.1"
      
      # Use 'yq' to simplify reading the updated YAML files
      - id: yq-install
        name: Install yq
        shell: bash
        env:
          VERSION: v4.34.1
          BINARY: yq_linux_amd64
          CURR_PATH: ${{ github.workspace }}
        run: |
          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - |\
          tar xz && mv ${BINARY} ${YQ_PATH}/yq

      # Then execute the script that will build the messages and send the notifications
      - id: detect-updated-services
        name: Detect updated services
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          COMMIT_URL: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
        shell: bash
        run: ./_ci/scripts/gen_update_service_file.sh ${CI_COMMIT_BEFORE_SHA} ${CI_COMMIT_SHA}
